{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kotha Yashwanth\\\\Documents\\\\Visual Studio\\\\React\\\\quizzical\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"../components/Quiz\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\n        if (!response.ok) {\n          if (response.status === 429) {\n            throw new Error(\"Rate limit exceeded. Please try again later.\");\n          } else {\n            throw new Error(`Error: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        setQuestions(data.results);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0) {\n      const arr = [];\n      for (let i = 0; i < 5; i++) {\n        arr.push({\n          fullData: questions[Math.floor(Math.random() * questions.length)],\n          isSelected: false,\n          id: nanoid()\n        });\n      }\n      setQuizData(arr);\n    }\n  }, [questions]);\n  function handleClick(id) {\n    setQuizData(prevData => prevData.map(val => {\n      return val.id === id ? {\n        ...val,\n        isSelected: !val.isSelected\n      } : val;\n    }));\n  }\n  const elements = quizData.map(val => {\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      data: val.fullData,\n      id: val.id,\n      status: val.isSelected,\n      handleClick: handleClick\n    }, val.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  });\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"1IOZLcD2AwTymFfBEqpLgZ/IBHQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","nanoid","jsxDEV","_jsxDEV","Home","_s","quizData","setQuizData","questions","setQuestions","error","setError","fetchQuestions","response","fetch","ok","status","Error","data","json","results","err","message","console","length","arr","i","push","fullData","Math","floor","random","isSelected","id","handleClick","prevData","map","val","elements","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["C:/Users/Kotha Yashwanth/Documents/Visual Studio/React/quizzical/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Home() {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\r\n                if (!response.ok) {\r\n                    if (response.status === 429) {\r\n                        throw new Error(\"Rate limit exceeded. Please try again later.\");\r\n                    } else {\r\n                        throw new Error(`Error: ${response.status}`);\r\n                    }\r\n                }\r\n                const data = await response.json();\r\n                setQuestions(data.results);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                console.error('Error fetching questions:', err);\r\n            }\r\n        };\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (questions.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                arr.push({\r\n                    fullData: questions[Math.floor(Math.random() * questions.length)],\r\n                    isSelected: false,\r\n                    id: nanoid()\r\n                });\r\n            }\r\n            setQuizData(arr);\r\n        }\r\n    }, [questions]);\r\n\r\n    function handleClick(id) {\r\n        setQuizData(prevData => prevData.map(val => {\r\n            return val.id === id ?\r\n                { ...val, isSelected: !val.isSelected } : val\r\n        }));\r\n    }\r\n\r\n    const elements = quizData.map(val => {\r\n        return <Quiz key={val.id} data={val.fullData} id={val.id} status={val.isSelected} handleClick={handleClick} />;\r\n    });\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"questions-container\">\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}