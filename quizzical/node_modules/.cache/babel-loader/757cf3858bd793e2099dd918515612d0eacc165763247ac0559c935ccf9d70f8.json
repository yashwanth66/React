{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kotha Yashwanth\\\\Documents\\\\Visual Studio\\\\React\\\\quizzical\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"../components/Quiz\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const [allAnswered, setAllAnswered] = useState(false);\n  const [resultVisible, setResultVisible] = useState(false);\n  const [resultCount, setResultCount] = useState(0);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\n        if (!response.ok) {\n          if (response.status === 429) {\n            throw new Error(\"Rate limit exceeded. Please try again later.\");\n          } else {\n            throw new Error(`Error: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        setQuestions(data.results);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0) {\n      const arr = [];\n      for (let i = 0; i < 5; i++) {\n        const question = questions[Math.floor(Math.random() * questions.length)];\n        const options = [...question.incorrect_answers, question.correct_answer].sort(() => Math.random() - 0.5);\n        arr.push({\n          fullData: question,\n          selectedOption: null,\n          id: nanoid(),\n          correct_answer: question.correct_answer,\n          options: options\n        });\n      }\n      setQuizData(arr);\n    }\n  }, [questions]);\n  useEffect(() => {\n    if (quizData.length > 0) {\n      const allAnswered = quizData.every(quiz => quiz.selectedOption !== null);\n      setAllAnswered(allAnswered);\n    }\n  }, [quizData]);\n  function handleClick(quizId, option) {\n    setQuizData(prevData => prevData.map(val => {\n      return val.id === quizId ? {\n        ...val,\n        selectedOption: option\n      } : val;\n    }));\n  }\n  const showResult = () => {\n    const correctCount = quizData.reduce((count, quiz) => {\n      return quiz.selectedOption === quiz.correct_answer ? count + 1 : count;\n    }, 0);\n    setResultCount(correctCount);\n    setResultVisible(true);\n  };\n  const resetQuiz = () => {\n    // Reset quizData and result visibility\n    setResultVisible(false);\n    setQuizData(prevData => prevData.map(val => ({\n      ...val,\n      selectedOption: null\n    })));\n  };\n  const elements = quizData.map(val => {\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      data: val.fullData,\n      id: val.id,\n      options: val.options,\n      selectedOption: val.selectedOption,\n      handleClick: handleClick\n    }, val.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  });\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n  const style1 = {\n    backgroundColor: allAnswered ? \"lightgreen\" : \"rgb(73, 120, 238)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkQuestions\",\n      style: style1,\n      children: allAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"All questions are answered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"--Answer all the Questions--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 73\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [resultVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Correct Answers: \", resultCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showResult,\n        disabled: !allAnswered,\n        children: \"Show Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetQuiz,\n        children: \"Reset Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"cIedMIhlbRO/tNi9NS+PwIn0JIU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","nanoid","jsxDEV","_jsxDEV","Home","_s","quizData","setQuizData","questions","setQuestions","error","setError","allAnswered","setAllAnswered","resultVisible","setResultVisible","resultCount","setResultCount","fetchQuestions","response","fetch","ok","status","Error","data","json","results","err","message","console","length","arr","i","question","Math","floor","random","options","incorrect_answers","correct_answer","sort","push","fullData","selectedOption","id","every","quiz","handleClick","quizId","option","prevData","map","val","showResult","correctCount","reduce","count","resetQuiz","elements","fileName","_jsxFileName","lineNumber","columnNumber","children","style1","backgroundColor","className","style","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Kotha Yashwanth/Documents/Visual Studio/React/quizzical/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Home() {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [allAnswered, setAllAnswered] = useState(false);\r\n    const [resultVisible, setResultVisible] = useState(false);\r\n    const [resultCount, setResultCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\r\n                if (!response.ok) {\r\n                    if (response.status === 429) {\r\n                        throw new Error(\"Rate limit exceeded. Please try again later.\");\r\n                    } else {\r\n                        throw new Error(`Error: ${response.status}`);\r\n                    }\r\n                }\r\n                const data = await response.json();\r\n                setQuestions(data.results);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                console.error('Error fetching questions:', err);\r\n            }\r\n        };\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (questions.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                const question = questions[Math.floor(Math.random() * questions.length)];\r\n                const options = [...question.incorrect_answers, question.correct_answer].sort(() => Math.random() - 0.5);\r\n                arr.push({\r\n                    fullData: question,\r\n                    selectedOption: null,\r\n                    id: nanoid(),\r\n                    correct_answer: question.correct_answer,\r\n                    options: options\r\n                });\r\n            }\r\n            setQuizData(arr);\r\n        }\r\n    }, [questions]);\r\n\r\n    useEffect(() => {\r\n        if (quizData.length > 0) {\r\n            const allAnswered = quizData.every(quiz => quiz.selectedOption !== null);\r\n            setAllAnswered(allAnswered);\r\n        }\r\n    }, [quizData]);\r\n\r\n    function handleClick(quizId, option) {\r\n        setQuizData(prevData => prevData.map(val => {\r\n            return val.id === quizId ? { ...val, selectedOption: option } : val;\r\n        }));\r\n    }\r\n\r\n    const showResult = () => {\r\n        const correctCount = quizData.reduce((count, quiz) => {\r\n            return quiz.selectedOption === quiz.correct_answer ? count + 1 : count;\r\n        }, 0);\r\n        setResultCount(correctCount);\r\n        setResultVisible(true);\r\n    };\r\n\r\n    const resetQuiz = () => {\r\n        // Reset quizData and result visibility\r\n        setResultVisible(false);\r\n        setQuizData(prevData => prevData.map(val => ({ ...val, selectedOption: null })));\r\n    };\r\n\r\n    const elements = quizData.map(val => {\r\n        return <Quiz \r\n            key={val.id} \r\n            data={val.fullData} \r\n            id={val.id} \r\n            options={val.options}\r\n            selectedOption={val.selectedOption} \r\n            handleClick={handleClick} \r\n        />;\r\n    });\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    const style1 = {\r\n        backgroundColor: allAnswered ? \"lightgreen\" : \"rgb(73, 120, 238)\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"questions-container\">\r\n                {elements}\r\n            </div>\r\n            <div className=\"checkQuestions\" style={style1}>\r\n                {allAnswered ? <div>All questions are answered!</div> : <div>--Answer all the Questions--</div>}\r\n            </div>\r\n            <div className=\"result\">\r\n                {resultVisible && <div>Correct Answers: {resultCount}</div>}\r\n                <button onClick={showResult} disabled={!allAnswered}>Show Result</button>\r\n                <button onClick={resetQuiz}>Reset Quiz</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}