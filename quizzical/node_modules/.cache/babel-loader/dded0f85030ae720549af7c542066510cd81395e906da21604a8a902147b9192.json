{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kotha Yashwanth\\\\Documents\\\\Visual Studio\\\\React\\\\quizzical\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Quiz from \"../components/Quiz\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [quizData, setQuizData] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [error, setError] = useState(null);\n  const [allAnswered, setAllAnswered] = useState(false);\n  const [result, setResult] = useState(0);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\n        if (!response.ok) {\n          if (response.status === 429) {\n            throw new Error(\"Rate limit exceeded. Please try again later.\");\n          } else {\n            throw new Error(`Error: ${response.status}`);\n          }\n        }\n        const data = await response.json();\n        setQuestions(data.results);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (questions.length > 0) {\n      const arr = [];\n      for (let i = 0; i < 5; i++) {\n        arr.push({\n          fullData: questions[Math.floor(Math.random() * questions.length)],\n          selectedOption: null,\n          id: nanoid()\n        });\n      }\n      setQuizData(arr);\n    }\n  }, [questions]);\n  useEffect(() => {\n    // Check if all questions are answered\n    if (quizData.length > 0) {\n      const allAnswered = quizData.every(quiz => quiz.selectedOption !== null);\n      setAllAnswered(allAnswered);\n    }\n  }, [quizData]);\n  function handleClick(quizId, option) {\n    setQuizData(prevData => prevData.map(val => {\n      return val.id === quizId ? {\n        ...val,\n        selectedOption: option\n      } : val;\n    }));\n  }\n  useEffect(() => {\n    setResult(() => {\n      quizData.map(val => {\n        if (val.selectedOption == val.correct_answer) {\n          setCount(count + 1);\n        }\n      });\n      return count;\n    });\n  }, [allAnswered]);\n  const elements = quizData.map(val => {\n    return /*#__PURE__*/_jsxDEV(Quiz, {\n      data: val.fullData,\n      id: val.id,\n      selectedOption: val.selectedOption,\n      handleClick: handleClick\n    }, val.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this);\n  });\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n  const style1 = {\n    backgroundColor: allAnswered ? \"lightgreen\" : \"rgb(73, 120, 238)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkQuestions\",\n      style: style1,\n      children: allAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"All questions are answered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"--Answer all the Questions--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"E30NIGowVsmkxmwH+KwRANqNFyQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","nanoid","jsxDEV","_jsxDEV","Home","_s","quizData","setQuizData","questions","setQuestions","error","setError","allAnswered","setAllAnswered","result","setResult","count","setCount","fetchQuestions","response","fetch","ok","status","Error","data","json","results","err","message","console","length","arr","i","push","fullData","Math","floor","random","selectedOption","id","every","quiz","handleClick","quizId","option","prevData","map","val","correct_answer","elements","fileName","_jsxFileName","lineNumber","columnNumber","children","style1","backgroundColor","className","style","_c","$RefreshReg$"],"sources":["C:/Users/Kotha Yashwanth/Documents/Visual Studio/React/quizzical/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Home() {\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [allAnswered, setAllAnswered] = useState(false);\r\n    const [result, setResult] = useState(0)\r\n    const [count, setCount] = useState(0)\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\");\r\n                if (!response.ok) {\r\n                    if (response.status === 429) {\r\n                        throw new Error(\"Rate limit exceeded. Please try again later.\");\r\n                    } else {\r\n                        throw new Error(`Error: ${response.status}`);\r\n                    }\r\n                }\r\n                const data = await response.json();\r\n                setQuestions(data.results);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                console.error('Error fetching questions:', err);\r\n            }\r\n        };\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (questions.length > 0) {\r\n            const arr = [];\r\n            for (let i = 0; i < 5; i++) {\r\n                arr.push({\r\n                    fullData: questions[Math.floor(Math.random() * questions.length)],\r\n                    selectedOption: null,\r\n                    id: nanoid()\r\n                });\r\n            }\r\n            setQuizData(arr);\r\n        }\r\n    }, [questions]);\r\n\r\n    useEffect(() => {\r\n        // Check if all questions are answered\r\n        if(quizData.length > 0){\r\n        const allAnswered = quizData.every(quiz => quiz.selectedOption !== null);\r\n        setAllAnswered(allAnswered);\r\n        }\r\n    }, [quizData]);\r\n\r\n    function handleClick(quizId, option) {\r\n        setQuizData(prevData => prevData.map(val => {\r\n            return val.id === quizId ?\r\n                { ...val, selectedOption: option } : val\r\n        }));\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setResult(()=>{\r\n            quizData.map(val=>{\r\n                if(val.selectedOption == val.correct_answer){\r\n                    setCount(count+1)\r\n                }\r\n            })\r\n            return count\r\n        })\r\n\r\n    },[allAnswered])\r\n\r\n    const elements = quizData.map(val => {\r\n        return <Quiz \r\n            key={val.id} \r\n            data={val.fullData} \r\n            id={val.id} \r\n            selectedOption={val.selectedOption} \r\n            handleClick={handleClick} \r\n        />;\r\n    });\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    const style1 = {\r\n        backgroundColor: allAnswered ? \"lightgreen\" : \"rgb(73, 120, 238)\"\r\n    }\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"questions-container\">\r\n                {elements}\r\n            </div>\r\n            <div className=\"checkQuestions\" style={style1}>\r\n            {allAnswered ? <div>All questions are answered!</div>:<div>--Answer all the Questions--</div>}\r\n            </div>\r\n            <div className=\"result\">\r\n                {result}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}