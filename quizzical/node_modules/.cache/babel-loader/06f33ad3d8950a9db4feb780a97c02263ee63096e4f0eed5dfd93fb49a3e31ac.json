{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kotha Yashwanth\\\\Documents\\\\Visual Studio\\\\React\\\\quizzical\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Quiz from \"../components/Quiz\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [quizData, setQuizData] = React.useState([]);\n  const [questions, setQuestions] = React.useState([]);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const fetchQuestions = (retryCount = 0) => {\n      fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\").then(res => {\n        if (!res.ok) {\n          if (res.status === 429) {\n            if (retryCount < 5) {\n              // Retry with exponential backoff\n              const delay = Math.pow(2, retryCount) * 1000;\n              setTimeout(() => fetchQuestions(retryCount + 1), delay);\n            } else {\n              throw new Error(\"Rate limit exceeded. Please try again later.\");\n            }\n          } else {\n            throw new Error(`Error: ${res.status}`);\n          }\n        }\n        return res.json();\n      }).then(data => {\n        setQuestions(data.results);\n      }).catch(err => {\n        setError(err.message);\n        console.error('Error fetching questions:', err);\n      });\n    };\n    fetchQuestions();\n  }, []);\n  React.useEffect(() => {\n    if (questions.length > 0) {\n      setQuizData(() => {\n        const arr = [];\n        for (let i = 0; i < 5; i++) {\n          arr.push( /*#__PURE__*/_jsxDEV(Quiz, {\n            data: questions[Math.floor(Math.random() * questions.length)]\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 30\n          }, this));\n        }\n        return arr;\n      });\n    }\n  }, [questions]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\",\n      children: quizData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"1IOZLcD2AwTymFfBEqpLgZ/IBHQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Quiz","nanoid","jsxDEV","_jsxDEV","Home","_s","quizData","setQuizData","useState","questions","setQuestions","error","setError","useEffect","fetchQuestions","retryCount","fetch","then","res","ok","status","delay","Math","pow","setTimeout","Error","json","data","results","catch","err","message","console","length","arr","i","push","floor","random","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["C:/Users/Kotha Yashwanth/Documents/Visual Studio/React/quizzical/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Home() {\r\n    const [quizData, setQuizData] = React.useState([]);\r\n    const [questions, setQuestions] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const fetchQuestions = (retryCount = 0) => {\r\n            fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\")\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        if (res.status === 429) {\r\n                            if (retryCount < 5) {\r\n                                // Retry with exponential backoff\r\n                                const delay = Math.pow(2, retryCount) * 1000;\r\n                                setTimeout(() => fetchQuestions(retryCount + 1), delay);\r\n                            } else {\r\n                                throw new Error(\"Rate limit exceeded. Please try again later.\");\r\n                            }\r\n                        } else {\r\n                            throw new Error(`Error: ${res.status}`);\r\n                        }\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setQuestions(data.results);\r\n                })\r\n                .catch(err => {\r\n                    setError(err.message);\r\n                    console.error('Error fetching questions:', err);\r\n                });\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (questions.length > 0) {\r\n            setQuizData(() => {\r\n                const arr = [];\r\n                for (let i = 0; i < 5; i++) {\r\n                    arr.push(<Quiz key={nanoid()} data={questions[Math.floor(Math.random() * questions.length)]} />);\r\n                }\r\n                return arr;\r\n            });\r\n        }\r\n    }, [questions]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"questions-container\">\r\n                {quizData}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAE9CT,KAAK,CAACc,SAAS,CAAC,MAAM;IAClB,MAAMC,cAAc,GAAGA,CAACC,UAAU,GAAG,CAAC,KAAK;MACvCC,KAAK,CAAC,gFAAgF,CAAC,CAClFC,IAAI,CAACC,GAAG,IAAI;QACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACT,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;YACpB,IAAIL,UAAU,GAAG,CAAC,EAAE;cAChB;cACA,MAAMM,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAER,UAAU,CAAC,GAAG,IAAI;cAC5CS,UAAU,CAAC,MAAMV,cAAc,CAACC,UAAU,GAAG,CAAC,CAAC,EAAEM,KAAK,CAAC;YAC3D,CAAC,MAAM;cACH,MAAM,IAAII,KAAK,CAAC,8CAA8C,CAAC;YACnE;UACJ,CAAC,MAAM;YACH,MAAM,IAAIA,KAAK,CAAC,UAAUP,GAAG,CAACE,MAAM,EAAE,CAAC;UAC3C;QACJ;QACA,OAAOF,GAAG,CAACQ,IAAI,CAAC,CAAC;MACrB,CAAC,CAAC,CACDT,IAAI,CAACU,IAAI,IAAI;QACVjB,YAAY,CAACiB,IAAI,CAACC,OAAO,CAAC;MAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACVlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACrB,KAAK,CAAC,2BAA2B,EAAEmB,GAAG,CAAC;MACnD,CAAC,CAAC;IACV,CAAC;IAEDhB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENf,KAAK,CAACc,SAAS,CAAC,MAAM;IAClB,IAAIJ,SAAS,CAACwB,MAAM,GAAG,CAAC,EAAE;MACtB1B,WAAW,CAAC,MAAM;QACd,MAAM2B,GAAG,GAAG,EAAE;QACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UACxBD,GAAG,CAACE,IAAI,eAACjC,OAAA,CAACH,IAAI;YAAgB2B,IAAI,EAAElB,SAAS,CAACa,IAAI,CAACe,KAAK,CAACf,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG7B,SAAS,CAACwB,MAAM,CAAC;UAAE,GAAxEhC,MAAM,CAAC,CAAC;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkE,CAAC,CAAC;QACpG;QACA,OAAOR,GAAG;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACzB,SAAS,CAAC,CAAC;EAEf,IAAIE,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAwC,QAAA,GAAK,SAAO,EAAChC,KAAK;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,oBACIvC,OAAA;IAAKyC,SAAS,EAAC,gBAAgB;IAAAD,QAAA,eAC3BxC,OAAA;MAAKyC,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EAC/BrC;IAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACrC,EAAA,CA3DuBD,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}