{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kotha Yashwanth\\\\Documents\\\\Visual Studio\\\\React\\\\quizzical\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Quiz from \"../components/Quiz\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [questions, setQuestions] = React.useState([]);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const fetchQuestions = () => {\n      fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\").then(res => {\n        if (!res.ok) {\n          if (res.status === 429) {\n            throw new Error(\"Rate limit exceeded. Please try again later.\");\n          } else {\n            throw new Error(`Error: ${res.status}`);\n          }\n        }\n        return res.json();\n      }).then(data => {\n        setQuestions(data.results);\n      }).catch(err => {\n        setError(err.message);\n        console.error('Error fetching questions:', err);\n      });\n    };\n    fetchQuestions();\n  }, [questions]);\n  console.log(questions);\n  const questionElements = () => {\n    const arr = [];\n    for (let i = 0; i < 5; i++) {\n      arr.push( /*#__PURE__*/_jsxDEV(Quiz, {\n        data: questions[Math.floor(Math.random() * questions.length)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this));\n    }\n    return arr;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"FzUhylqGFmQdFMtpQWpZWUg6vAo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Quiz","nanoid","jsxDEV","_jsxDEV","Home","_s","questions","setQuestions","useState","error","setError","useEffect","fetchQuestions","fetch","then","res","ok","status","Error","json","data","results","catch","err","message","console","log","questionElements","arr","i","push","Math","floor","random","length","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Kotha Yashwanth/Documents/Visual Studio/React/quizzical/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport Quiz from \"../components/Quiz\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nexport default function Home(){\r\n    \r\n    const [questions, setQuestions] = React.useState([]);\r\n    const [error, setError] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const fetchQuestions = () => {\r\n            fetch(\"https://opentdb.com/api.php?amount=50&category=9&difficulty=easy&type=multiple\")\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        if (res.status === 429) {\r\n                            throw new Error(\"Rate limit exceeded. Please try again later.\");\r\n                        } else {\r\n                            throw new Error(`Error: ${res.status}`);\r\n                        }\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setQuestions(data.results);\r\n                })\r\n                .catch(err => {\r\n                    setError(err.message);\r\n                    console.error('Error fetching questions:', err);\r\n                });\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, [questions]);\r\n    console.log(questions)\r\n\r\n    const questionElements = ()=> {\r\n        const arr = []\r\n        for(let i=0;i<5;i++){\r\n            arr.push(<Quiz data={questions[Math.floor(Math.random()*questions.length)]}/>)\r\n        }\r\n        return arr\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"questions-container\">\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAAQC,MAAM,QAAO,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAE9CT,KAAK,CAACY,SAAS,CAAC,MAAM;IAClB,MAAMC,cAAc,GAAGA,CAAA,KAAM;MACzBC,KAAK,CAAC,gFAAgF,CAAC,CAClFC,IAAI,CAACC,GAAG,IAAI;QACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACT,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;YACpB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;UACnE,CAAC,MAAM;YACH,MAAM,IAAIA,KAAK,CAAC,UAAUH,GAAG,CAACE,MAAM,EAAE,CAAC;UAC3C;QACJ;QACA,OAAOF,GAAG,CAACI,IAAI,CAAC,CAAC;MACrB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;QACVb,YAAY,CAACa,IAAI,CAACC,OAAO,CAAC;MAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACVb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAAChB,KAAK,CAAC,2BAA2B,EAAEc,GAAG,CAAC;MACnD,CAAC,CAAC;IACV,CAAC;IAEDX,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EACfmB,OAAO,CAACC,GAAG,CAACpB,SAAS,CAAC;EAEtB,MAAMqB,gBAAgB,GAAGA,CAAA,KAAK;IAC1B,MAAMC,GAAG,GAAG,EAAE;IACd,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;MAChBD,GAAG,CAACE,IAAI,eAAC3B,OAAA,CAACH,IAAI;QAACoB,IAAI,EAAEd,SAAS,CAACyB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC3B,SAAS,CAAC4B,MAAM,CAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,CAAC;IAClF;IACA,OAAOV,GAAG;EACd,CAAC;EAGD,oBACIzB,OAAA;IAAKoC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BrC,OAAA;MAAKoC,SAAS,EAAC;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACjC,EAAA,CAhDuBD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}